name: CI

on:
  push:
    branches-ignore:
      - main
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: html/laravel
    steps:
    - uses: actions/checkout@v2

    - name: Set up PHP 8.1
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        tools: composer:v2
        extensions: mbstring, json, pdo_mysql, gd

    - name: Debug Composer version
      run: composer --version
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.testing', '.env');"
    - name: Install Dependencies
      run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Setup Database
      run: |
        sudo systemctl start mysql
        sudo mysql -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS laravel_testing;'
        sudo mysql -uroot -proot -e "CREATE USER 'user'@'localhost' IDENTIFIED BY 'laravel_testing';"
        sudo mysql -uroot -proot -e "GRANT ALL PRIVILEGES ON laravel_testing.* TO 'user'@'localhost';"
        sudo mysql -uroot -proot -e "FLUSH PRIVILEGES;"
    - name: Execute tests (Unit and Feature tests) via PHPUnit
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel_testing
        DB_USERNAME: user
        DB_PASSWORD: laravel_testing
      run: vendor/bin/phpunit

  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    needs: laravel-tests  # Only proceed if Laravel tests succeed
    steps:
    - name: deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SVR_IP }}
        username: ${{ secrets.DEPLOY_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.DEPLOY_PRIVATE_KEY }}
        script: |
          cd ${{ secrets.SVR_DIR }}
          git pull origin main
          docker exec apache bash -c "cd laravel && composer install --no-dev"
          docker exec apache bash -c "cd react && npm install"
          docker exec apache bash -c "cd react && NODE_OPTIONS="--max-old-space-size=1024" npm run build"
          cd puppeteer && npm install
          pm2 restart pdf-converter
